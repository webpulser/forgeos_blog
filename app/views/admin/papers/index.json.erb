<%
  states_for_select = Paper.aasm_states.collect{ |state| [t(state.name, :scope => [:paper,:states]),state.name.to_s] }
  output = {
    :sEcho => params[:sEcho],
    :iTotalRecords => @papers.total_entries || 0,
    :iTotalDisplayRecords => @papers.size,
    :aaData => @papers.collect do |paper|
      link_id = "paper_#{paper.id}"
      [
        content_tag(:div, content_tag(:div, '', :class=>"handler") + content_tag(:div, '', :class=>"small-icons paper"), :id => link_id, :class => 'handler_container'),
        content_tag(:div, link_to(paper.name, [forgeos_blog, :admin, paper]), :class => 'product-name'),
        paper.author ? paper.author.fullname : '-',
        select_tag(:status, options_for_select(states_for_select,paper.state), :class => 'published'),
        paper.published_at ? paper.published_at.to_s(:db) : '-',
        link_to('', [forgeos_blog, :edit, :admin, paper], :class => 'small-icons edit-link') +
        link_to('', [forgeos_blog, :admin, paper],
         :remote => true,
         :method => :delete,
         :confirm => t('paper.destroy.confirm').capitalize,
         :class => 'small-icons destroy-link', :id => "destroy_#{link_id}"
        )
      ]
    end
  }
-%>
<%= raw output.to_json -%>
